#############################################################
#
# Database template to read and set loop 1 or 2 'setpoint' 
# and 'output' parameters.
#
# Address macros:
# ADDR_LOOP_SPH - the loop setpoint high limit (32-bit range)
# ADDR_LOOP_SPL - the loop setpoint low limit (32-bit range)
# ADDR_LOOP_SPR - the loop setpoint ramp rate (32-bit range)
# ADDR_LOOP_OPH - the loop output high limit (32-bit range)
# ADDR_LOOP_OPL - the loop output low limit (32-bit range)
# ADDR_LOOP_OPR - the loop output ramp limit (32-bit range)
# ADDR_LOOP_OPM - the loop output manual setting (32-bit range)
#
# Macros in addition to nd.template:
# L - loop index (1 or 2)
#
# Matt Pearson
# May 2020
#
############################################################

# ///
# /// Read the floating point parameters for this loop.sp
# ///
record(dfanout, "$(S)$(ND)Loop$(L):SP:Read") {
  field(VAL, "1")
  field(OUTA, "$(S)$(ND)Loop$(L):SP:HighLimit.PROC PP")
  field(OUTB, "$(S)$(ND)Loop$(L):SP:LowLimit.PROC PP")
  field(OUTC, "$(S)$(ND)Loop$(L):SP:Rate.PROC PP")
}

# ///
# /// Read the floating point parameters for this loop.op
# ///
record(dfanout, "$(S)$(ND)Loop$(L):Output:Pead") {
  field(VAL, "1")
  field(OUTA, "$(S)$(ND)Loop$(L):Output:High.PROC PP")
  field(OUTB, "$(S)$(ND)Loop$(L):Output:Low.PROC PP")
  field(OUTC, "$(S)$(ND)Loop$(L):Output:Rate.PROC PP")
  field(OUTD, "$(S)$(ND)Loop$(L):Output:Manual.PROC PP")
}

############################################################
# Read records

# ///
# /// Read the high limit on the setpoint
# ///
record(ai, "$(S)$(ND)Loop$(L):SP:HighLimit") {
  field(DESC, "Loop$(L) SP High Limit")
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT)2w4,$(ADDR_LOOP_SPH),1)FLOAT32_BE")
  field(PREC, "$(PREC)")
  info(archive, "Monitor, 00:00:01, VAL")
}

# ///
# /// Read the low limit on the setpoint
# ///
record(ai, "$(S)$(ND)Loop$(L):SP:LowLimit") {
  field(DESC, "Loop$(L) SP Low Limit")
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT)2w4,$(ADDR_LOOP_SPL),1)FLOAT32_BE")
  field(PREC, "$(PREC)")
  info(archive, "Monitor, 00:00:01, VAL")
}

# ///
# /// Read the rate limit on the setpoint change
# /// This affects how fast the working setpoint can change.
# ///
record(ai, "$(S)$(ND)Loop$(L):SP:Rate") {
  field(DESC, "Loop$(L) SP Rate")
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT)2w4,$(ADDR_LOOP_SPR),1)FLOAT32_BE")
  field(PREC, "$(PREC)")
  info(archive, "Monitor, 00:00:01, VAL")
}

# ///
# /// Read the output high limit
# ///
record(ai, "$(S)$(ND)Loop$(L):Output:High") {
  field(DESC, "Loop$(L) Output High")
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT)2w4,$(ADDR_LOOP_OPH),1)FLOAT32_BE")
  field(PREC, "1")
  field(EGU, "%")
  info(archive, "Monitor, 00:00:01, VAL")
}

# ///
# /// Read the output low limit
# ///
record(ai, "$(S)$(ND)Loop$(L):Output:Low") {
  field(DESC, "Loop$(L) Output Low")
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT)2w4,$(ADDR_LOOP_OPL),1)FLOAT32_BE")
  field(PREC, "1")
  field(EGU, "%")
  info(archive, "Monitor, 00:00:01, VAL")
}

# ///
# /// Read the output ramp rate.
# /// This limits how fast the PID output can change.
# ///
record(ai, "$(S)$(ND)Loop$(L):Output:Rate") {
  field(DESC, "Loop$(L) Output Rate")
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT)2w4,$(ADDR_LOOP_OPR),1)FLOAT32_BE")
  field(PREC, "1")
  info(archive, "Monitor, 00:00:01, VAL")
}

# ///
# /// Read the manual output power setting 
# ///
record(ai, "$(S)$(ND)Loop$(L):Output:Manual") {
  field(DESC, "Loop$(L) Output Man Setting")
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT)2w4,$(ADDR_LOOP_OPM),1)FLOAT32_BE")
  field(PREC, "1")
  field(EGU, "%")
  info(archive, "Monitor, 00:00:01, VAL")
}

############################################################
# Set records

# ///
# /// Set the high limit on the setpoint
# ///
record(ao, "$(S)$(ND)Loop$(L):SP:HighLimitSet") {
  field(DESC, "Set Loop$(L) SP High Limit")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT)2w16,$(ADDR_LOOP_SPH),1)FLOAT32_BE")
  field(PREC, "$(PREC)")
  field(FLNK, "$(S)$(ND)Loop$(L):SP:HighLimit")
  info(archive, "Monitor, 00:00:01, VAL")
}

# ///
# /// Set the low limit on the setpoint
# ///
record(ao, "$(S)$(ND)Loop$(L):SP:LowLimitSet") {
  field(DESC, "Set Loop$(L) SP Low Limit")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT)2w16,$(ADDR_LOOP_SPL),1)FLOAT32_BE")
  field(PREC, "$(PREC)")
  field(FLNK, "$(S)$(ND)Loop$(L):SP:LowLimit")
  info(archive, "Monitor, 00:00:01, VAL")
}

# ///
# /// Set the rate limit on the setpoint change.
# /// This affects how fast the working setpoint can change.
# ///
record(ao, "$(S)$(ND)Loop$(L):SP:RateSet") {
  field(DESC, "Set Loop$(L) SP Rate")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT)2w16,$(ADDR_LOOP_SPR),1)FLOAT32_BE")
  field(PREC, "$(PREC)")
  field(FLNK, "$(S)$(ND)Loop$(L):SP:Rate")
  info(archive, "Monitor, 00:00:01, VAL")
}

# ///
# /// Set the high limit for the output power
# ///
record(ao, "$(S)$(ND)Loop$(L):Output:HighSet") {
  field(DESC, "Set Loop$(L) Output High")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT)2w16,$(ADDR_LOOP_OPH),1)FLOAT32_BE")
  field(PREC, "1")
  field(EGU, "%")
  field(FLNK, "$(S)$(ND)Loop$(L):Output:High")
  info(archive, "Monitor, 00:00:01, VAL")
}

# ///
# /// Set the low limit for the output power
# ///
record(ao, "$(S)$(ND)Loop$(L):Output:LowSet") {
  field(DESC, "Set Loop$(L) Output Low")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT)2w16,$(ADDR_LOOP_OPL),1)FLOAT32_BE")
  field(PREC, "1")
  field(EGU, "%")
  field(FLNK, "$(S)$(ND)Loop$(L):Output:Low")
  info(archive, "Monitor, 00:00:01, VAL")
}

# ///
# /// Set the ramp rate for the output power
# /// This limits how fast the PID output can change.
# ///
record(ao, "$(S)$(ND)Loop$(L):Output:RateSet") {
  field(DESC, "Set Loop$(L) Output Rate")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT)2w16,$(ADDR_LOOP_OPR),1)FLOAT32_BE")
  field(PREC, "1")
  field(FLNK, "$(S)$(ND)Loop$(L):Output:Rate")
  info(archive, "Monitor, 00:00:01, VAL")
}

# ///
# /// Set the manual output power setting 
# ///
record(ao, "$(S)$(ND)Loop$(L):Output:ManualSet") {
  field(DESC, "Set Loop$(L) Output Man Setting")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT)2w16,$(ADDR_LOOP_OPM),1)FLOAT32_BE")
  field(PREC, "1")
  field(EGU, "%")
  field(FLNK, "$(S)$(ND)Loop$(L):Output:Manual")
  info(archive, "Monitor, 00:00:01, VAL")
}


