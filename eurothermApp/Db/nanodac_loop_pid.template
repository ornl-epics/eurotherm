
#############################################################
#
# Database template to read and write loop PID variables 
# for the eurotherm nanodac. The PID set parameters
# are dealt with in a seperate template, instantiated in
# this one.
# 
# S - base PV name
# ND - name for this nanodac
# L - loop number
# PORT - asyn port name for loop PID data
#
# Note: By convention the port name for the writeable parameters
# is the same as the read parameters, but with a 'w' on the end.
# 
############################################################

############################################################
# Read records
############################################################

record(mbbi, "$(S)$(ND)Loop$(L):PID:Type")
{
  field(DESC, "Loop$(L) PID Type")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0,1)")
  field(SCAN, "I/O Intr")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(ZRST, "Off")
  field(ONST, "Set")
  field(TWST, "Setpoint")
  field(THST, "PV")
  field(FRST, "Error")
  field(FVST, "Output")
  field(SXST, "Remote")
}

record(mbbi, "$(S)$(ND)Loop$(L):PID:NumSets")
{
  field(DESC, "Loop$(L) PID Num Sets")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),1,1)")
  field(SCAN, "I/O Intr")
  field(ZRVL, "1")
  field(ONVL, "2")
  field(TWVL, "3")
  field(ZRST, "1 Set")
  field(ONST, "2 Sets")
  field(TWST, "3 Sets")
}

record(longin, "$(S)$(ND)Loop$(L):PID:ActiveSet")
{
  field(DESC, "Loop$(L) Output Num Sets")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),3,1)")
  field(SCAN, "I/O Intr")
}

record(ai, "$(S)$(ND)Loop$(L):PID:Boundary12")
{
  field(DESC, "Loop$(L) PID Boundary12")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),4,1)")
  field(SCAN, "I/O Intr")
}

record(ai, "$(S)$(ND)Loop$(L):PID:Boundary23")
{
  field(DESC, "Loop$(L) PID Boundary23")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),5,1)")
  field(SCAN, "I/O Intr")
}

record(ai, "$(S)$(ND)Loop$(L):PID:PB1")
{
  field(DESC, "Loop$(L) PB1")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),6,1)")
  field(SCAN, "I/O Intr")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}

record(ai, "$(S)$(ND)Loop$(L):PID:Ti1")
{
  field(DESC, "Loop$(L) Ti1")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),7,1)")
  field(SCAN, "I/O Intr")
  field(PREC, "0")
  field(EGU, "sec")
}

record(ai, "$(S)$(ND)Loop$(L):PID:Td1")
{
  field(DESC, "Loop$(L) Td1")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),8,1)")
  field(SCAN, "I/O Intr")
  field(PREC, "0")
  field(EGU, "sec")
}

record(ai, "$(S)$(ND)Loop$(L):PID:PB2")
{
  field(DESC, "Loop$(L) PB2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),14,1)")
  field(SCAN, "I/O Intr")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}

record(ai, "$(S)$(ND)Loop$(L):PID:Ti2")
{
  field(DESC, "Loop$(L) Ti2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),15,1)")
  field(SCAN, "I/O Intr")
  field(PREC, "0")
  field(EGU, "sec")
}

record(ai, "$(S)$(ND)Loop$(L):PID:Td2")
{
  field(DESC, "Loop$(L) Td2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),16,1)")
  field(SCAN, "I/O Intr")
  field(PREC, "0")
  field(EGU, "sec")
}

record(ai, "$(S)$(ND)Loop$(L):PID:PB3")
{
  field(DESC, "Loop$(L) PB3")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),22,1)")
  field(SCAN, "I/O Intr")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}

record(ai, "$(S)$(ND)Loop$(L):PID:Ti3")
{
  field(DESC, "Loop$(L) Ti3")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),23,1)")
  field(SCAN, "I/O Intr")
  field(PREC, "0")
  field(EGU, "sec")
}

record(ai, "$(S)$(ND)Loop$(L):PID:Td3")
{
  field(DESC, "Loop$(L) Td3")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),24,1)")
  field(SCAN, "I/O Intr")
  field(PREC, "0")
  field(EGU, "sec")
}

record(ai, "$(S)$(ND)Loop$(L):PID:OutputHigh1")
{
  field(DESC, "Loop$(L) Output High 1")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),30,1)")
  field(SCAN, "I/O Intr")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}

record(ai, "$(S)$(ND)Loop$(L):PID:OutputLow1")
{
  field(DESC, "Loop$(L) Output Low 1")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),31,1)")
  field(SCAN, "I/O Intr")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}

record(ai, "$(S)$(ND)Loop$(L):PID:OutputHigh2")
{
  field(DESC, "Loop$(L) Output High 2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),32,1)")
  field(SCAN, "I/O Intr")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}

record(ai, "$(S)$(ND)Loop$(L):PID:OutputLow2")
{
  field(DESC, "Loop$(L) Output Low 2")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),33,1)")
  field(SCAN, "I/O Intr")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}

record(ai, "$(S)$(ND)Loop$(L):PID:OutputHigh3")
{
  field(DESC, "Loop$(L) Output High 3")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),34,1)")
  field(SCAN, "I/O Intr")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}

record(ai, "$(S)$(ND)Loop$(L):PID:OutputLow3")
{
  field(DESC, "Loop$(L) Output Low 3")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),35,1)")
  field(SCAN, "I/O Intr")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}

############################################################
# Write records
############################################################

record(mbbo, "$(S)$(ND)Loop$(L):PID:TypeSet")
{
  field(DESC, "Set Loop$(L) PID Type")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,0,1)")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(ZRST, "Off")
  field(ONST, "Set")
  field(TWST, "Setpoint")
  field(THST, "PV")
  field(FRST, "Error")
  field(FVST, "Output")
  field(SXST, "Remote")  
}

record(mbbo, "$(S)$(ND)Loop$(L):PID:NumSetsSet")
{
  field(DESC, "Set Loop$(L) PID Num Sets")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,1,1)")
  field(ZRVL, "1")
  field(ONVL, "2")
  field(TWVL, "3")
  field(ZRST, "1 Set")
  field(ONST, "2 Sets")
  field(TWST, "3 Sets")
}

record(longout, "$(S)$(ND)Loop$(L):PID:ActiveSetSet")
{
  field(DESC, "Set Loop$(L) PID Active Set")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,3,1)")
}

record(ao, "$(S)$(ND)Loop$(L):PID:Boundary12Set")
{
  field(DESC, "Set Loop$(L) PID Boundary12")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,4,1)")
}

record(ao, "$(S)$(ND)Loop$(L):PID:Boundary23Set")
{
  field(DESC, "Set Loop$(L) PID Boundary23")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,5,1)")
}

record(ao, "$(S)$(ND)Loop$(L):PID:PB1Set")
{
  field(DESC, "Set Loop$(L) PB1")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,6,1)")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}

record(ao, "$(S)$(ND)Loop$(L):PID:Ti1Set")
{
  field(DESC, "Set Loop$(L) Ti1")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,7,1)")
  field(PREC, "0")
  field(EGU, "sec")
}

record(ao, "$(S)$(ND)Loop$(L):PID:Td1Set")
{
  field(DESC, "Set Loop$(L) Td1")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,8,1)")
  field(PREC, "0")
  field(EGU, "sec")
}

record(ao, "$(S)$(ND)Loop$(L):PID:PB2Set")
{
  field(DESC, "Set Loop$(L) PB2")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,14,1)")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}

record(ao, "$(S)$(ND)Loop$(L):PID:Ti2Set")
{
  field(DESC, "Set Loop$(L) Ti2")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,15,1)")
  field(PREC, "0")
  field(EGU, "sec")
}

record(ao, "$(S)$(ND)Loop$(L):PID:Td2Set")
{
  field(DESC, "Set Loop$(L) Td2")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,16,1)")
  field(PREC, "0")
  field(EGU, "sec")
}

record(ao, "$(S)$(ND)Loop$(L):PID:PB3Set")
{
  field(DESC, "Set Loop$(L) PB3")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,22,1)")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}

record(ao, "$(S)$(ND)Loop$(L):PID:Ti3Set")
{
  field(DESC, "Set Loop$(L) Ti3")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,23,1)")
  field(PREC, "0")
  field(EGU, "sec")
}

record(ao, "$(S)$(ND)Loop$(L):PID:Td3Set")
{
  field(DESC, "Set Loop$(L) Td3")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,24,1)")
  field(PREC, "0")
  field(EGU, "sec")
}

record(ao, "$(S)$(ND)Loop$(L):PID:OutputHigh1Set")
{
  field(DESC, "Set Loop$(L) Output High 1")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,30,1)")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}

record(ao, "$(S)$(ND)Loop$(L):PID:OutputLow1Set")
{
  field(DESC, "Set Loop$(L) Output Low 1")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,31,1)")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}

record(ao, "$(S)$(ND)Loop$(L):PID:OutputHigh2Set")
{
  field(DESC, "Set Loop$(L) Output High 2")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,32,1)")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}

record(ao, "$(S)$(ND)Loop$(L):PID:OutputLow2Set")
{
  field(DESC, "Set Loop$(L) Output Low 2")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,33,1)")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}

record(ao, "$(S)$(ND)Loop$(L):PID:OutputHigh3Set")
{
  field(DESC, "Set Loop$(L) Output High 3")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,34,1)")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}

record(ao, "$(S)$(ND)Loop$(L):PID:OutputLow3Set")
{
  field(DESC, "Set Loop$(L) Output Low 3")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT)w,35,1)")
  field(LINR, "LINEAR")
  field(ESLO, "0.1")
  field(PREC, "1")
  field(EGU, "%")
}




