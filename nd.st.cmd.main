
# Asyn IP port
# set to noAutoConnect
#    drvAsynIPPortConfigure("portName","hostInfo",priority,noAutoConnect,noProcessEos) 
drvAsynIPPortConfigure("n$(NI)ip","$(IP_ADDR)",0,0,1)
        
epicsThreadSleep(1)

# modbusInterposeConfig
# arg 1: portName
# arg 2: linkType
# arg 3: timeoutMsec
# arg 4: writeDelayMsec
modbusInterposeConfig("n$(NI)ip", 0, 2000, 0)

# drvModbusAsynConfigure
# arg 1: portName
# arg 2: tcpPortName
# arg 3: slaveAddress 
# arg 4: modbusFunction 
# arg 5: modbusStartAddress 
# arg 6: modbusLength
# arg 7: default dataType
# arg 8: pollMsec 
# arg 9: plcType

# Port to read 1 or 2 modbus words. 
drvModbusAsynConfigure("n$(NI)1w4", "n$(NI)ip", 1, 4, -1, 1, 0, 0, 0)
drvModbusAsynConfigure("n$(NI)2w4", "n$(NI)ip", 1, 4, -1, 2, 0, 0, 0)
drvModbusAsynConfigure("n$(NI)3w4", "n$(NI)ip", 1, 4, -1, 3, 0, 0, 0)


# The channel description (and units string) seem to occupy 25 words.
# 20 registers for the description
# 5 registers for the units
# 1 char per register, stored in the high order byte.
drvModbusAsynConfigure("n$(NI)25w4", "n$(NI)ip", 1, 4, -1, 25, 0, 0, 0)

# Port to write 1 or 2 modbus words. 
# For these write functions we specify a non-zero poll time so that we read the
# register once at IOC startup to initialize the write record values.
drvModbusAsynConfigure("n$(NI)1w6", "n$(NI)ip", 1, 6, -1, 1, 0, 1, 0)
drvModbusAsynConfigure("n$(NI)2w6", "n$(NI)ip", 1, 6, -1, 2, 0, 1, 0)

epicsThreadSleep(1)

# Turn off autoConnect to force an IOC reboot
asynAutoConnect n$(NI)ip,0,0




